programs. MOWever, applying it lO WED apphCcallONns LaCes
unique challenges. We list the primary ones below.
Challenge 1: Providing Entry URLs and Request Param-
eters in a Targeted Manner. Fuzzing web applications
requires identifying both entry URLs and request parameters.
In web applications, request parameters are defined as key-
value pairs submitted by clients. Each parameter consists
of a key (a unique identifier) and a value (the correspond-
ing data). For targeted vulnerability detection via directed
fuzzing, the potentially vulnerable code locations are only
accessible through specific entry scripts. These entry scripts
are primarily associated with the front-end components of
the applications. They are designed to provide users with
access to the applicationâ€™s functionalities. The URLs of these
entry scripts are referred to as the entry URLs for the targets.
Existing tools usually rely on crawlers [12, 13, 16, 17, 32]