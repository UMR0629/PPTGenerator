[1]

[2]

[3]

[4]

[5]

[6]

[7]

8]

9]

10]

O. Foundation, “Top 10 web application security risks,’ 2021, https:
//owasp.org/www- project-top-ten.

一 一 , “Sql injection,’ 2024, https://owasp.org/www-community/
attacks/SQL_Injection.

——,, “Command injection,” 2024, https://owasp.org/www-community/
attacks/Command_Injection.

——,, “Cross site scripting,” 2024, https://owasp.org/www-community/
attacks/xss.

W3Techs, “Usage statistics of php for websites,’ Apr. 2024, https:
//w3techs.com/technologies/details/pl- php.

C. Luo, P. Li, and W. Meng, “Tchecker: Precise static inter-procedural
analysis for detecting taint-style vulnerabilities in php applications,”
in Proceedings of the 29th ACM Conference on Computer and
Communications Security (CCS), Los Angeles, CA, USA, Nov. 2022.

J. Dahse and T. Holz, “Simulation of built-in php features for precise
static code analysis.” in Proceedings of the 2014 Annual Network
and Distributed System Security Symposium (NDSS), San Diego, CA,
USA, Feb. 2014.

H. J. Kang, K. L. Aw, and D. Lo, “Detecting false alarms from
automatic static analysis tools: How far are we?” in Proceedings of
the 44th International Conference on Software Engineering (ICSE),
Pittsburgh, PA, USA, May 2022.

P. Nunes, I. Medeiros, J. M. C. Fonseca, N. Neves, M. Correia, and
M. Vieira, “Benchmarking static analysis tools for web security,’ IEEE
Transactions on Reliability, 2018.

M. Backes, K. Rieck, M. Skoruppa, B. Stock, and F. Yamaguchi,

“Efficient and flexible discovery of php application vulnerabilities,” in
Proceedings of the 2nd IEEE European Symposium on Security and

Privacy (EuroS&P), Paris, France, Apr. 2017.