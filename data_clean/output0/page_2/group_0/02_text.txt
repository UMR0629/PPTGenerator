We aim to harness the strengths and mitigate the weak-
nesses of these methods. Employing directed fuzzing to
validate static analysis reports offers significant potential for
enhancing the detection of vulnerabilities in web applications.
By concentrating resources on identified high-risk targets
generated by static analysis, we can reduce the number of
states requiring exploration in dynamic testing. Directed
fuzzing can, in turn, lower the costs of manual audits
introduced by the high false-positive rates of static analysis.
Unfortunately, applying widely-used directed fuzzing tech-
niques to web applications is non-trivial, primarily because
of the characteristics inherent to the interpreted languages
used in these applications, such as PHP. For example, weak
typing and high levels of dynamism impact the precision of
static analysis, which is crucial for preparation work like
distance calculation.

A Val...’ t Frou ig] TPm 1 ， 和 1 1 1 1