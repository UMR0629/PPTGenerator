In addition to instrumenting the web application code,
another common approach involves instrumenting the PHP
interpreter, which is written in C, and testing with a fuzzer
for native programs [20]. By analyzing the coverage of the
interpreter’s code, it may implicitly reflect the coverage
of the target web application. However, this method is
impractical for directed fuzzing purposes. First, it results in
a significant amount of noise. Even if we run a simple PHP
script containing a few lines of code, the interpreter would
execute a large number of instructions. Second, instrumenting
the interpreter collects execution traces for the interpreter
but leaves the fuzzer unaware of the actual execution flow
of the web application’s code. When performing directed
fuzzing, the fuzzer requires accurate distance feedback from
the target application, not the interpreter.