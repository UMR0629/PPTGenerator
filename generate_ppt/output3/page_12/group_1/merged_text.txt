YYOe dasstss UL LUIS Cath CUINIVOUMEM UL 工人 二 上 人 上 下
plays in its overall performance. We start with a baseline
version of PREDATOR, disabling all proposed techniques
(PREDATOR,»), and then sequentially add each technique
to evaluate its impact. We denote each configuration as
PREDATOR,, PREDATOReg, PREDATORedgs, PREDATORedsp,
and PREDATOR, representing the gradual inclusion of the
static analysis method for entry URL identification and
targeted input corpus construction, the selective dynamic
instrumentation, the block distance supplementation, the
distance-guided probabilistic mutation, and the dependent
parameter-sensitive mutation, respectively. We achieved dif-
ferent configurations by modifying and recompiling the
relevant components of PREDATOR. We selected the SQLi
and CMDi vulnerabilities successfully triggered in bWAPP
as the dataset. This is primarily for two reasons. Firstly,
bWAPP contains the most known vulnerabilities among all
applications. Secondly, there is only one entry URL for each
vulnerability, which simplifies the experimental setup. We set
the time budget to 1 hour, which is sufficient according to our
observations in the vulnerability reproduction experiments,
and conduct 10 runs for each configuration.

Results. The results are shown in Figure 3. Different colored
bars represent the w7TE required by the corresponding
configuration. A timeout results in a time to exposure of
1 hour. We investigated the performance across 6 different
configurations. The baseline prototype PREDATOR» used
Witcher’s crawler for extracting entry URLs and parameters.
-_

Results. The results are shown in Figure 3. Different colored
bars represent the w7TE required by the corresponding
configuration. A timeout results in a time to exposure of
1 hour. We investigated the performance across 6 different
configurations. The baseline prototype PREDATOR» used
Witcher’s crawler for extracting entry URLs and parameters.
However, it consistently failed to extract any valid entry
URL, thus was unable to trigger any vulnerabilities. With the
implementation of entry URL identification and targeted input
corpus construction, PREDATOR, successfully detected 8 out
of the 13 vulnerabilities. In the remaining 5 cases it failed
to trigger vulnerabilities in all 10 runs. PREDATOReg further
improved the performance due to the addition of selective
dynamic instrumentation, notably in cases 1, 8, and 10. For
two cases 7 and 11, we observed an increase in 7TE after
enabling block distance supplementation in PREDATOReds，
attributable to its runtime overhead. The supplementation
incurs extra overhead as it involves tracking call sites with
unknown callee functions and determining whether the
callees can reach the target. PREDATORedsp managed to
reduce the time cost in most cases, as it mainly adopts
dictionary-based mutation methods in exploration stage and
byte stream-based mutation methods in exploitation stage.
Upon enabling the dependent parameter-sensitive mutation,
PREDATOR improves significantly in cases 6, 11, and 13.